// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  name String @id

  password String

  directMessage DirectMessage[] @relation(name: "directMessage")
  chan          Chan[]          @relation(name: "chan")

  friendList   User[] @relation("friendList")
  friendOfList User[] @relation("friendList")

  incomingFriendInvitation  User[] @relation("friendInvitation")
  outcomingFriendInvitation User[] @relation("friendInvitation")

  blockedUserList   User[] @relation("blockedUser")
  blockedByUserList User[] @relation("blockedUser")

  discussionElement DiscussionElement[]
  discussionEvent   DiscussionEvent[]
}

enum ChanType {
  PRIVATE
  PUBLIC
}

model Chan {
  id Int @id @default(autoincrement())

  type     ChanType
  title    String?
  password String?

  users        User[]     @relation(name: "chan")
  discussion   Discussion @relation(fields: [discussionId], references: [id])
  discussionId Int        @unique
}

model DirectMessage {
  id Int @id @default(autoincrement())

  users        User[]     @relation(name: "directMessage")
  discussion   Discussion @relation(fields: [discussionId], references: [id])
  discussionId Int        @unique
}

model Discussion {
  id Int @id @default(autoincrement())

  directMessage DirectMessage?
  chan          Chan?

  elements DiscussionElement[]
}

model DiscussionElement {
  id Int @id @default(autoincrement())

  message DiscussionMessage?
  event   DiscussionEvent?

  authorRelation User   @relation(fields: [author], references: [name])
  author         String @unique

  creationDate     DateTime  @default(now())
  modificationDate DateTime? @updatedAt

  discussion   Discussion @relation(fields: [discussionId], references: [id])
  discussionId Int
}

model DiscussionEvent {
  id Int @id @default(autoincrement())

  eventType String

  concernedUserRelation User   @relation(fields: [concernedUser], references: [name])
  concernedUser         String @unique

  discussionElement   DiscussionElement @relation(fields: [discussionElementId], references: [id])
  discussionElementId Int               @unique
}

model DiscussionMessage {
  id Int @id @default(autoincrement())

  content String

  discussionElement   DiscussionElement @relation(fields: [discussionElementId], references: [id])
  discussionElementId Int               @unique
}
